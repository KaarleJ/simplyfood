
name: Check SimplyFood build and tests

on:
  push:
    branches: ["main"]

  pull_request:
    types: [opened, reopened]

  workflow_dispatch:

env:
  NODE_ENV: "test"
  TEST_DATABASE_URL: ${{ secrets.TEST_DATABASE_URL  }}
  POSTGRES_PRISMA_URL: ${{  secrets.POSTGRES_PRISMA_URL }}
  POSTGRES_URL_NON_POOLING: ${{  secrets.POSTGRES_URL_NON_POOLING }}

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  Build_and_test_pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v3
        with: 
          node-version: 20
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: Install dependencies
        run: npm ci
      - name: Build with Next.js
        run: npm run build
      - name: Run unit-tests
        run: npm run test
#      - name: Install Playwright Browsers
#        run: npx playwright install --with-deps
#      - name: Run Playwright tests
#        run: npx playwright test
#      - uses: actions/upload-artifact@v3
#        if: always()
#        with:
#          name: playwright-report
#          path: playwright-report/
#          retention-days: 30